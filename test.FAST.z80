.engine mycomputer

.include "constants.asm"
.include "test.fast.mac.asm"

.include "IOSerial.asm"

    ld SP,STACK
    call init
    jp testsStart

.include "monty.asm"

.align $100
testsStart:

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    test "\\F", false
    test "\\T", true
    test "1", 1
    test "2", 2
    test "1", 1
    test "0", 0
    test "10", 10
    test "123", 123
    test "-1",-1
    test "''", 0
    test "'a'", $61
    test "'\\''", $27
    test "#10", $10
    test "#FF", $FF
    test "-1 2 +",1
    test "-1 1 +",0
    test "1 2 +", 3
    test "4 1 2 +", 3
    test "1 2 +", 3
    test "123 456 +", 123+456
    test "64 128 +", 64+128
    test "-1 -1 -",0
    test "5 3 -", 2
    test "3 5 &", 1
    test "3 5 |", 7
    test "2 3 *", 6
    test "1 2 3 + *", 5
    test "7 3 /", 2
    test "7 3 / _", 1
    test "2 3 ==", FALSE
    test "3 3 ==", TRUE
    test "1 2 <", TRUE
    test "2 1 <", FALSE
    test "2 3 <", TRUE
    test "3 3 <", FALSE
    test "1 2 >", FALSE
    test "2 1 >", TRUE
    test "3 3 >", FALSE
    test "4 3 >", TRUE
    test "2 2 <=", TRUE
    test "2 2 >=", TRUE
    test "3 1 <<", 6
    test "10 1 >>", 5
    test "1 x = x", 1
    test "{1}:", 1
    test "{{1}:}:", 1
    test "{{{1}:}:}:", 1
    test "5 \\F {10} ?", 5
    test "5 \\T {10} ? +", 15
    test "1 \\F {10} {20} ?? +", 21
    test "1 \\T {10} {20} ?? +", 11
    test "() -2%", $0000
    test "(a) -1%", $0001
    test "(a:) -1%", $0001
    test "(a:b) -1%", $0102
    test "(:b) -1%", $0101
    test "() {2} \\f:", 2
    test "(a) {2} \\f:", 2
    test "5 (a) {$a} \\f:", 5
    test "5 (a:b) {$a} \\f:", 5
    test "(a) {{2}:} \\f:", 2
    test "1 5 (a) {{$a}:} \\f:", 5
    test "1 5 (ab) {{$a}:} \\f:", 1
    test "1 5 (a) {{$a 2 +}:} \\f:", 7
    test "1 5 (ab) {{$a $b +}:} \\f:", 6
    test "(a) {2} \\f x= 1 x:", 2
    test "(a) {$a} \\f x= 0 1 x:", 1
    test "(ab) {$b} \\f x= 1 2 x:", 2
    test "(a:b) {$a} \\f x= 1 2 x:", 2
    test "(ab) {$b} \\f x= 1 2 x:", 2
    test "(ab) {$b $a} \\f x= 10 15 x: -", 5
    test "(a:b) {2} \\f x= 1 x:", 2
    test "(:b) {100 $b= $b} \\f x= x:", 100
    test "(a:b) {1 $b= $b} \\f x= 2 x:", 1
    test "(a:b) {$a $b= $b} \\f x= 2 x:", 2
    test "1 10 20 (ab) {\\T {$a} {$b} ??} \\f: +", 11
    test "1 10 20 (ab) {\\F {$a} {$b} ??} \\f: +", 21
    test "[10 20 30] 1%", 20
    test "\\b [1 2 3] 1%", 2
    test "\\b ['A' 'B' 'C'] 1%", 66
    test "0 [{10} {20} {30}] \\s", 10
    test "1 10 20 (ab) {0 [{$a} {$b}] \\s} \\f:", 10
    test "0 10 20 (iab) {$i [{$a} {$b}] \\s} \\f:", 10
    test "1 10 20 (iab) {$i [{$a} {$b}] \\s} \\f:", 20

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ; test "10 sqrt", 3
    ; test "10 sqrt %", 1

    ; test "[ 1 ] closure call", 1
    ; test "[ [ 2 ] ] closure call 0%", 2

    call printStr
    .cstr "Done!"
    HALT
    
.align 2
printer:
    pop hl
    call prtdec
    jp (ix)

.include "ram.asm"
